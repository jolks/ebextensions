# Original: http://www.snip2code.com/Snippet/256399/Amazon-Elastic-Beanstalk-Sidekiq
commands:
  create_post_dir:
    command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true
files:
  "/etc/rsyslog.d/11-sidekiq.conf":
    mode: '000644'
    content: |
      EB_CONFIG_APP_LOGS=$(/opt/elasticbeanstalk/bin/get-config container -k app_log_dir)

      $InputFileName $EB_CONFIG_APP_LOGS/sidekiq.log
      $InputFileTag sidekiq
      $InputFileStateFile sidekiq-state
      $InputFileSeverity info
      $InputFileFacility local6
      $InputRunFileMonitor 

  "/opt/elasticbeanstalk/hooks/appdeploy/post/50_restart_sidekiq":
    mode: "000755"
    content: |
      #!/bin/bash

      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_CONFIG_APP_CURRENT=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
      EB_CONFIG_APP_LOGS=$(/opt/elasticbeanstalk/bin/get-config container -k app_log_dir)
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
      EB_CONFIG_APP_PIDS=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)

      . $EB_SUPPORT_DIR/envvars
      . $EB_SCRIPT_DIR/use-app-ruby.sh

      cd $EB_CONFIG_APP_CURRENT

      PIDFILE=$EB_CONFIG_APP_PIDS/sidekiq.pid

      cd $EB_CONFIG_APP_CURRENT

      if [ -f $PIDFILE ]
      then
        SIDEKIQ_LIVES=$(/bin/ps -o pid= -p `cat $PIDFILE`)
          if [ -z $SIDEKIQ_LIVES ]
          then
            rm -rf $PIDFILE
          else
            kill -TERM `cat $PIDFILE`
            sleep 20
            rm -rf $PIDFILE
          fi
      fi

      . $EB_SUPPORT_DIR/envvars.d/sysenv

      sleep 10

      # This will be displayed in /var/log/eb-activity.log
      echo ">>> CURRENT Rails Environment = $RAILS_ENV"

      bundle pack --all # Prevent gem not found problem in future by putting .gem files in vendor/cache
      bundle install # Incase there is a gem that is missing

      if [ -f $EB_CONFIG_APP_LOGS/$RAILS_ENV.log ]
      then
        echo ">>> $RAILS_ENV.log already exist!"
      else
        echo ">>> soft-linking $RAILS_ENV.log!"
        ln -s $EB_CONFIG_APP_CURRENT/log/$RAILS_ENV.log $EB_CONFIG_APP_LOGS/$RAILS_ENV.log
      fi

      bundle exec sidekiq \
        -e $RAILS_ENV \
        -P $EB_CONFIG_APP_PIDS/sidekiq.pid \
        -C $EB_CONFIG_APP_CURRENT/config/sidekiq.yml \
        -L $EB_CONFIG_APP_LOGS/sidekiq.log \
        -d

  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_mute_sidekiq":
    mode: "000755"
    content: |
      #!/bin/bash

      EB_CONFIG_APP_PIDS=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)

      PIDFILE=$EB_CONFIG_APP_PIDS/sidekiq.pid

      if [ -f $PIDFILE ]
      then
        SIDEKIQ_LIVES=$(/bin/ps -o pid= -p `cat $PIDFILE`)
          if [ -z $SIDEKIQ_LIVES ]
          then
            rm -rf $PIDFILE
          else
            kill -USR1 `cat $PIDFILE`
            sleep 10
          fi
      fi
